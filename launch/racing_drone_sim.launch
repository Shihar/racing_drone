<?xml version="1.0"?>
<!--
<author>Swapneel Naphade</author>
<email>snaphade@umd.edu</email>
<version>3.0</version>
-->

<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	   <!-- <arg name="world_name" value="$(find racing_drone)/worlds/adr_track_two_gates.world"/> -->
     <arg name="world_name" value="$(find racing_drone)/worlds/adr_track_four_gates.world"/>
  </include>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find cvg_sim_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find cvg_sim_gazebo)/urdf/quadrotor_sensors.urdf.xacro"/> 
  </include>

  <!-- Load parameters -->
  <!-- <rosparam command="load" file="$(find racing_drone)/params/state_estimator.yaml" /> -->
  <rosparam command="load" file="$(find racing_drone)/params/controller_sim.yaml" />
  <!-- <rosparam param="/controller/bebop">false</rosparam> -->

  <rosparam command="load" file="$(find racing_drone)/params/gate_detector_sim.yaml" />
  <rosparam command="load" file="$(find racing_drone)/params/localizer.yaml" />

  <!-- Launch state_estimator node -->
  <!-- <node pkg="racing_drone" type="state_estimator" name="state_estimator"  output='screen'/> -->

  <!-- Launch controller node -->
  <node pkg="racing_drone" type="controller" name="controller" />

  <!-- Launch gate_detector node -->
  <node pkg="racing_drone" type="gate_detector" name="gate_detector"  />

  <!-- Launch localizer node -->
  <node pkg="racing_drone" type="localizer" name="localizer"  />

  <!-- Launch state_machine node -->
  <node pkg="racing_drone" type="state_machine" name="state_machine"  output='screen'/>

  <!-- Launch rqt_plot -->
  <!-- <node type="rqt_plot" name="rqt_plot" pkg="rqt_plot" /> -->

  <!-- Launch RVIZ -->
	<node type="rviz" name="rviz" pkg="rviz" args="-d $(find racing_drone)/rviz/racing_drone.rviz" />
    	     
  <!-- Takeoff Command -->
  <node pkg="rostopic" type="rostopic" name="rostopic" args="pub /ardrone/takeoff std_msgs/Empty --once"/>
  
</launch>
